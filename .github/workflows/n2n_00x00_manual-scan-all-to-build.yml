name: n2n-manual-scan-all-to-build

on:
    workflow_dispatch:
        inputs:
            FORCE_PUSH:
                description: "force push to registry"
                required: true
                type: boolean
                default: false
            NEED_FIXLIB_VERSIONS_B_S_rC:
                description: "ned fixlib versions_b_s_rc    e.g. 'v2_2.3.0, v2s_2.1.0_r111, v1'"
                required: true
                type: string
                default: "v2_2.3.0, v2s_2.1.0_r111, v1"
            DEFIN_LATEST_VERSION:
                description: "defin_latest_version        e.g. v3 | v4"
                default: "v3"
                required: true
                type: string
            DOCKER_BUILD_DOCKERFILE_FIX:
                description: "docker_build_dockerfile_fix e.g. Dockerfile.build.debian-8 | Dockerfile.build.ubuntu-18.04"
                default: "Dockerfile.build.debian-8"
                required: true
                type: string
            DOCKER_BUILD_DOCKERFILE_OK:
                description: "docker_build_dockerfile_ok  e.g. Dockerfile.build.debian-stable"
                default: "Dockerfile.build.debian-stable"
                required: true
                type: string
jobs:
    scan-all:
        runs-on: ubuntu-latest
        env:
            DOCKER_APP_NAME: n2n
            DOCKER_CONTEXT_PATH: n2n
        permissions:
            contents: read
            packages: write
        outputs:
            MATRIX_JSON: ${{ steps.build-version.outputs.MATRIX_JSON }}
            FORCE_PUSH: ${{ steps.build-version.outputs.FORCE_PUSH }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Check build-version
              id: build-version
              run: |
                  cd n2n/scripts/build
                  chmod +x *.sh
                  source 0x0_init-logger.sh

                  LOG_INFO 'scan_all_save Starting'
                  export my_token='${{  secrets.GITHUB_TOKEN }}'
                  bash 1x1_n2n-scan-all.sh
                  LOG_INFO 'scan_all_save Successful'
                  echo "MATRIX_JSON=$(cat dict_build_obj.json)" >>  $GITHUB_OUTPUT

                  force_push=${{ inputs.FORCE_PUSH }}
                  LOG_INFO  FORCE_PUSH: ${force_push}
                  echo "FORCE_PUSH=${FORCE_PUSH}" >> $GITHUB_OUTPUT

    build-all:
        needs: [scan-all]
        permissions:
            contents: read
            packages: write
            id-token: write
        strategy:
            fail-fast: true
            max-parallel: 1
            matrix: ${{ fromJSON(needs.scan-all.outputs.MATRIX_JSON) }}
        uses: ./.github/workflows/n2n_00x01_call-build-all-pre.yml
        secrets: inherit
        with:
            VERSION_BIG: ${{ matrix.version_big }}
            VERSION_SMALL: ${{ matrix.fix_version_small }}
            VERSION_COMMIT: ${{ matrix.fix_version_commit }}
            VERSION_B_S_rC: ${{ matrix.version_b_s_rc }}
            STR_OS_ARCHS: ${{ matrix.str_os_archs }}
            STR_DOWNLOAD_URLS: ${{ matrix.str_download_urls }}
            FORCE_PUSH: ${{ inputs.FORCE_PUSH == 'true' }}
            NEED_FIXLIB_VERSIONS_B_S_rC: ${{ inputs.NEED_FIXLIB_VERSIONS_B_S_rC }}
            DEFIN_LATEST_VERSION: ${{ inputs.DEFIN_LATEST_VERSION }}
            DOCKER_BUILD_DOCKERFILE_OK: ${{ inputs.DOCKER_BUILD_DOCKERFILE_OK }}
            DOCKER_BUILD_DOCKERFILE_FIX: ${{ inputs.DOCKER_BUILD_DOCKERFILE_FIX }}
