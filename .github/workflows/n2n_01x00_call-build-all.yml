name: n2n-build-all

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
    workflow_call:
        inputs:
            VERSION_BIG:
                description: "version_big                 e.g. v3 | v2"
                required: true
                type: string
            VERSION_SMALL:
                description: "version_small               e.g. 3.1.1 | 2.1.0"
                required: false
                type: string
            VERSION_COMMIT:
                description: "version_commit              e.g. 1255 | 124"
                required: false
                type: string
            VERSION_B_S_rC:
                description: "version_b_s_rc              e.g. v3 | v3_3.1.1_r1255"
                required: true
                type: string
            STR_OS_ARCHS:
                description: "str_os_archs                e.g. linux/amd64"
                required: true
                type: string
            STR_DOWNLOAD_URLS:
                description: "str_download_urls           e.g. https://raw.githubusercontent.com/lucktu/n2n/master/Linux/n2n_v3_linux_x64_v3.1.1_r1255_static_by_heiye.tar.gz"
                required: true
                type: string
            DOCKER_CONTEXT_PATH:
                description: "docker_context_path         e.g. n2n | frp"
                required: true
                type: string
                default: "n2n"
            DOCKER_APP_NAME:
                description: "docker_app_name             e.g. n2n | frp"
                required: true
                type: string
                default: "n2n"
            DOCKER_TAG_PREFIX:
                description: "docker_tag_prefix           e.g. sh- | conf-"
                required: false
                type: string
            DOCKER_TAG_SUFFIX:
                description: "docker_tag_suffix           e.g. -dev | -conf"
                required: false
                type: string
            DOCKER_BUILD_DOCKERFILE:
                description: "docker_build_dockerfile     e.g. Dockerfile.run"
                required: false
                type: string
            DOCKER_BUILD_PLATFORMS:
                description: "docker_build_platforms      e.g. linux/amd64 | linux/amd64,linux/arm64"
                required: false
                type: string
            NEED_FIXLIB_VERSIONS_B_S_rC:
                description: "ned fixlib versions_b_s_rc  e.g. v2_2.3.0, v2s_2.1.0_r111, v1"
                required: false
                type: string
                default: "v2_2.3.0, v2s_2.1.0_r111, v1"
            FORCE_PUSH:
                default: false
                description: "force push to registry"
                required: true
                type: boolean
            DEFIN_LATEST_VERSION:
                description: "defin_latest_version        e.g. v3 | v4"
                default: "v3"
                required: true
                type: string
            DOCKER_BUILD_DOCKERFILE_OK:
                description: "docker_build_dockerfile_ok  e.g. Dockerfile.build.ubuntu-20.04 | Dockerfile.build.alpine-latest | Dockerfile.build.debian-11"
                default: "Dockerfile.build.debian-11"
                required: true
                type: string
            DOCKER_BUILD_DOCKERFILE_FIX:
                description: "docker_build_dockerfile_fix e.g. Dockerfile.build.ubuntu-18.04 | Dockerfile.build.alpine-3.8 | Dockerfile.build.debian-11"
                default: "Dockerfile.build.debian-11"
                required: true
                type: string
            DOCKER_TEST_SCRIPTS_PATH:
                description: "docker_test_scripts_path    eg. n2n/script/build"
                required: false
                type: string
            DOCKER_BUILD_WHITH_OUT_CACHE:
                default: false
                description: "docker_build_whith_out_cache"
                required: true
                type: boolean

jobs:
    init-docker-tag:
        name: init-docker-tag - ${{ inputs.DOCKER_TAG_PREFIX }} - ${{ inputs.DOCKER_TAG_SUFFIX }}
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write
        outputs:
            DOCKER_TEST_TAG: ${{ steps.check-docker-tag.outputs.DOCKER_TEST_TAG }}
        steps:
            - name: check docker tag
              id: check-docker-tag
              run: |
                  LOG_INFO() {
                      echo -e $(caller) "\033[0;32m[    INFO] $@ \033[0m"
                  }
                  docker_tag_prefix="${{ inputs.DOCKER_TAG_PREFIX }}"
                  LOG_INFO "DOCKER_TAG_PREFIX: ${docker_tag_prefix}"

                  docker_tag_suffix="${{ inputs.DOCKER_TAG_SUFFIX }}"
                  LOG_INFO "DOCKER_TAG_SUFFIX: ${docker_tag_suffix}"

                  docker_tag="${{ inputs.VERSION_B_S_rC }}"
                  if [[ ${docker_tag_prefix} != '' ]]; then
                      docker_tag=${docker_tag_prefix}${docker_tag}
                  fi
                  if [[ ${docker_tag_suffix} != '' ]]; then
                      docker_tag=${docker_tag}${docker_tag_suffix}
                  fi

                  LOG_INFO "DOCKER_TEST_TAG: ${docker_tag}"
                  echo DOCKER_TEST_TAG=${docker_tag} >> $GITHUB_OUTPUT

    check-init-version:
        name: check-init-version - ${{ inputs.DOCKER_TAG_PREFIX }} - ${{ inputs.DOCKER_TAG_SUFFIX }}
        uses: ./.github/workflows/n2n_02x00_call-init-version.yml
        with:
            VERSION_BIG: ${{ inputs.VERSION_BIG }}
            VERSION_SMALL: ${{ inputs.VERSION_SMALL }}
            VERSION_COMMIT: ${{ inputs.VERSION_COMMIT }}
            VERSION_B_S_rC: ${{ inputs.VERSION_B_S_rC }}
            STR_OS_ARCHS: ${{ inputs.STR_OS_ARCHS }}
            STR_DOWNLOAD_URLS: ${{ inputs.STR_DOWNLOAD_URLS }}
            FORCE_PUSH: ${{ inputs.FORCE_PUSH == true }}
            NEED_FIXLIB_VERSIONS_B_S_rC: ${{ inputs.NEED_FIXLIB_VERSIONS_B_S_rC }}
            DOCKER_BUILD_DOCKERFILE: ${{ inputs.DOCKER_BUILD_DOCKERFILE }}
            DEFIN_LATEST_VERSION: ${{ inputs.DEFIN_LATEST_VERSION }}
            DOCKER_BUILD_DOCKERFILE_OK: ${{ inputs.DOCKER_BUILD_DOCKERFILE_OK }}
            DOCKER_BUILD_DOCKERFILE_FIX: ${{ inputs.DOCKER_BUILD_DOCKERFILE_FIX }}

    check-output-check-init-version:
        name: show-check-init-version - ${{ inputs.DOCKER_TAG_PREFIX }} - ${{ inputs.DOCKER_TAG_SUFFIX }}
        needs: [check-init-version]
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write
        steps:
            - name: Check outputs check-init-version
              run: |
                  LOG_INFO() {
                      echo -e $(caller) "\033[0;32m[    INFO] $@ \033[0m"
                  }
                  LOG_INFO "ONLY_BIGVERSION: ${{ needs.check-init-version.outputs.ONLY_BIGVERSION }}"
                  LOG_INFO "IS_LATEST_VERSION: ${{ needs.check-init-version.outputs.IS_LATEST_VERSION }}"
                  LOG_INFO "NEED_FIX: ${{ needs.check-init-version.outputs.NEED_FIX }}"
                  LOG_INFO "BUILD_DOCKERFILE: ${{ needs.check-init-version.outputs.DOCKER_BUILD_DOCKERFILE }}"
                  LOG_INFO "DOCKER_BUILD_CACHE_TAG: ${{ needs.check-init-version.outputs.DOCKER_BUILD_CACHE_TAG }}"

    check-pushed:
        name: check-pushed - ${{ inputs.DOCKER_TAG_PREFIX }} - ${{ inputs.DOCKER_TAG_SUFFIX }}
        needs: [init-docker-tag]
        uses: ./.github/workflows/n2n_02x01_call-check-pushed.yml
        secrets: inherit
        with:
            DOCKER_APP_NAME: ${{ inputs.DOCKER_APP_NAME }}
            DOCKER_TEST_TAG: ${{ needs.init-docker-tag.outputs.DOCKER_TEST_TAG }}
            FORCE_PUSH: ${{ inputs.FORCE_PUSH }}

    check-output-check-pushed:
        name: show-check-pushed - ${{ inputs.DOCKER_TAG_PREFIX }} - ${{ inputs.DOCKER_TAG_SUFFIX }}
        needs: [check-pushed]
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write
        steps:
            - name: Check outputs check-pushed
              run: |
                  LOG_INFO() {
                      echo -e $(caller) "\033[0;32m[    INFO] $@ \033[0m"
                  }
                  LOG_INFO "LAST_PULLED_DATE: ${{ needs.check-pushed.outputs.LAST_PULLED_DATE }}"
                  LOG_INFO "BUILD_PUSH: ${{ needs.check-pushed.outputs.BUILD_PUSH }}"

    check-all-docker-n2n-build-test-publish:
        name: show-all- ${{ inputs.DOCKER_TAG_PREFIX }} - ${{ inputs.DOCKER_TAG_SUFFIX }}
        needs: [check-init-version, init-docker-tag, check-pushed]
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write
        steps:
            - name: Check outputs - all
              run: |
                  LOG_INFO() {
                      echo -e $(caller) "\033[0;32m[    INFO] $@ \033[0m"
                  }
                  LOG_INFO 'VERSION_BIG: ${{ inputs.VERSION_BIG }}'
                  LOG_INFO 'VERSION_SMALL: ${{ inputs.VERSION_SMALL }}'
                  LOG_INFO 'VERSION_COMMIT: ${{ inputs.VERSION_COMMIT }}'
                  LOG_INFO 'VERSION_B_S_rC: ${{ inputs.VERSION_B_S_rC }}'
                  LOG_INFO 'STR_OS_ARCHS: ${{ inputs.STR_OS_ARCHS }}'
                  LOG_INFO 'STR_DOWNLOAD_URLS: ${{ inputs.STR_DOWNLOAD_URLS }}'
                  LOG_INFO 'DOCKER_CONTEXT_PATH: ${{ inputs.DOCKER_APP_NAME }}'
                  LOG_INFO 'DOCKER_APP_NAME: ${{ inputs.DOCKER_APP_NAME }}'
                  LOG_INFO 'DOCKER_TAG_PREFIX: ${{ inputs.DOCKER_TAG_PREFIX }}'
                  LOG_INFO 'DOCKER_TAG_SUFFIX: ${{ inputs.DOCKER_TAG_SUFFIX }}'
                  LOG_INFO 'DOCKER_BUILD_PLATFORMS: ${{ inputs.DOCKER_BUILD_PLATFORMS }}'
                  LOG_INFO 'DOCKER_BUILD_DOCKERFILE: ${{ needs.check-init-version.outputs.DOCKER_BUILD_DOCKERFILE }}'
                  LOG_INFO 'DOCKER_TEST_TAG: ${{ needs.init-docker-tag.outputs.DOCKER_TEST_TAG }}'
                  LOG_INFO 'IS_LATEST_VERSION: ${{ needs.check-init-version.outputs.IS_LATEST_VERSION }}'
                  LOG_INFO 'DOCKER_BUILD_CACHE_TAG: ${{ needs.check-init-version.outputs.DOCKER_BUILD_CACHE_TAG }}'
                  LOG_INFO 'BUILD_PUSH: ${{ needs.check-pushed.outputs.BUILD_PUSH }}'
                  LOG_INFO "NEED_FIX: ${{ needs.check-init-version.outputs.NEED_FIX }}"

    docker-n2n-build-test:
        name: docker-n2n-build-test - ${{ inputs.DOCKER_TAG_PREFIX }} - false - ${{ inputs.DOCKER_TAG_SUFFIX }}
        if: ${{ false }}
        needs: [check-init-version, init-docker-tag]
        uses: ./.github/workflows/n2n_02x01_call-docker-build-test-publish.yml
        secrets: inherit
        with:
            VERSION_BIG: ${{ inputs.VERSION_BIG }}
            VERSION_SMALL: ${{ inputs.VERSION_SMALL }}
            VERSION_COMMIT: ${{ inputs.VERSION_COMMIT }}
            VERSION_B_S_rC: ${{ inputs.VERSION_B_S_rC }}
            STR_OS_ARCHS: ${{ inputs.STR_OS_ARCHS }}
            STR_DOWNLOAD_URLS: ${{ inputs.STR_DOWNLOAD_URLS }}
            DOCKER_CONTEXT_PATH: ${{ inputs.DOCKER_APP_NAME }}
            DOCKER_APP_NAME: ${{ inputs.DOCKER_APP_NAME }}
            DOCKER_TAG_PREFIX: ${{ inputs.DOCKER_TAG_PREFIX }}
            DOCKER_TAG_SUFFIX: ${{ inputs.DOCKER_TAG_SUFFIX }}
            DOCKER_BUILD_PLATFORMS: ${{ inputs.DOCKER_BUILD_PLATFORMS }}
            DOCKER_BUILD_DOCKERFILE: ${{ needs.check-init-version.outputs.DOCKER_BUILD_DOCKERFILE }}
            DOCKER_TEST_TAG: ${{ needs.init-docker-tag.outputs.DOCKER_TEST_TAG }}
            IS_LATEST_VERSION: ${{ needs.check-init-version.outputs.IS_LATEST_VERSION == 'true' }}
            DOCKER_BUILD_CACHE_TAG: ${{ needs.check-init-version.outputs.DOCKER_BUILD_CACHE_TAG }}
            DOCKER_PUSH: ${{ false }}
            DOCKER_BUILD_DOCKERFILE_OK: ${{ inputs.DOCKER_BUILD_DOCKERFILE_OK }}
            DOCKER_BUILD_DOCKERFILE_FIX: ${{ inputs.DOCKER_BUILD_DOCKERFILE_FIX }}
            DOCKER_TEST_SCRIPTS_PATH: ${{ inputs.DOCKER_TEST_SCRIPTS_PATH }}
            DOCKER_BUILD_WHITH_OUT_CACHE: ${{ inputs.DOCKER_BUILD_WHITH_OUT_CACHE }}

    docker-n2n-build-test-publish:
        name: docker-n2n-build-test-publish - ${{ inputs.DOCKER_TAG_PREFIX }} - true - ${{ inputs.DOCKER_TAG_SUFFIX }}
        needs: [
                check-init-version,
                init-docker-tag,
                check-pushed,
                # docker-n2n-build-test,
            ]
        if: ${{ needs.check-pushed.outputs.BUILD_PUSH == 'true' }}
        uses: ./.github/workflows/n2n_02x01_call-docker-build-test-publish.yml
        secrets: inherit
        with:
            VERSION_BIG: ${{ inputs.VERSION_BIG }}
            VERSION_SMALL: ${{ inputs.VERSION_SMALL }}
            VERSION_COMMIT: ${{ inputs.VERSION_COMMIT }}
            VERSION_B_S_rC: ${{ inputs.VERSION_B_S_rC }}
            STR_OS_ARCHS: ${{ inputs.STR_OS_ARCHS }}
            STR_DOWNLOAD_URLS: ${{ inputs.STR_DOWNLOAD_URLS }}
            DOCKER_CONTEXT_PATH: ${{ inputs.DOCKER_APP_NAME }}
            DOCKER_APP_NAME: ${{ inputs.DOCKER_APP_NAME }}
            DOCKER_TAG_PREFIX: ${{ inputs.DOCKER_TAG_PREFIX }}
            DOCKER_TAG_SUFFIX: ${{ inputs.DOCKER_TAG_SUFFIX }}
            DOCKER_BUILD_PLATFORMS: ${{ inputs.DOCKER_BUILD_PLATFORMS }}
            DOCKER_BUILD_DOCKERFILE: ${{ needs.check-init-version.outputs.DOCKER_BUILD_DOCKERFILE }}
            DOCKER_TEST_TAG: ${{ needs.init-docker-tag.outputs.DOCKER_TEST_TAG }}
            IS_LATEST_VERSION: ${{ needs.check-init-version.outputs.IS_LATEST_VERSION == 'true' }}
            DOCKER_BUILD_CACHE_TAG: ${{ needs.check-init-version.outputs.DOCKER_BUILD_CACHE_TAG }}
            DOCKER_PUSH: ${{ true }}
            DOCKER_BUILD_DOCKERFILE_OK: ${{ inputs.DOCKER_BUILD_DOCKERFILE_OK }}
            DOCKER_BUILD_DOCKERFILE_FIX: ${{ inputs.DOCKER_BUILD_DOCKERFILE_FIX }}
            DOCKER_TEST_SCRIPTS_PATH: ${{ inputs.DOCKER_TEST_SCRIPTS_PATH }}
            DOCKER_BUILD_WHITH_OUT_CACHE: ${{ inputs.DOCKER_BUILD_WHITH_OUT_CACHE }}
